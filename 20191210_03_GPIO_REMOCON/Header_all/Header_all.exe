 Implement postEvent() to put new events on the queue.

+ Add mouseEntered/Exited on the desktop.
  http://code.google.com/p/processing/issues/detail?id=500

+ Change output from processing-java to be UTF-8 encoded.
  http://code.google.com/p/processing/issues/detail?id=1418

+ Disable Quartz renderer to fix line blending problem on OS X. 
  This older renderer was faster but had some bugs, like one that
  caused lines to composite incorrectly when alpha was used. 
  Add "PApplet.useQuartz = true;" into your PApplet.main() 
  function to switch back to the old method:
  http://processing.googlecode.com/svn/trunk/processing/build/javadoc/core/processing/core/PApplet.html#useQuartz

+ Remove requirement for Google APIs in Android mode.
  http://code.google.com/p/processing/issues/detail?id=613


[ bug fixes ] 

+ mouseButton not being set properly in mouseClicked.
  http://code.google.com/p/processing/issues/detail?id=1350

+ mouseButton is 0 in mouseReleased() on OS X
  http://code.google.com/p/processing/issues/detail?id=1373

+ mousePressed() coloring now different from mousePressed
  http://code.google.com/p/processing/issues/detail?id=41
  Still not necessarily perfect, but it's a big improvement.
  Note for people implementing their own Modes: FUNCTION1 and 
  FUNCTION2 have now been added for functions with parens.

+ 32-bit mode / 64-bit mode preference was ignored on OS X.
  http://code.google.com/p/processing/issues/detail?id=1426

+ Prevent errors on first line of a new tab from highlighting the last 
  line of the previous tab. In particular, a single letter on a new tab 
  was highlighting the last line of the tab to its left.

+ Android debug information wasn't being passed through to the console. 
  In addition, on Windows, error reporting wasn't working properly
  (couldn't find the right line or report the error correctly).
  http://code.google.com/p/processing/issues/detail?id=1440

+ Fix ugly results from resize() command on PImage:
  http://code.google.com/p/processing/issues/detail?id=332
  and similar on Android:
  http://code.google.com/p/processing/issues/detail?id=239

+ P2D/P3D PGraphics buffer failing to draw if larger than main surface.
  http://code.google.com/p/processing/issues/detail?id=1255

+ Fix double error report when textMode(SCREEN) was used: 
  textMode(SCREEN) has been removed from Processing 2.0.
  textMode(256) is not supported by this renderer.

+ image(pgraphics, x, y, w, h) was only drawing once when shrinking.
  http://code.google.com/p/processing/issues/detail?id=1382

+ beginShape(QUAD) was not working with Java2D.
  http://code.google.com/p/processing/issues/detail?id=1365

+ Relative coordinates not updated properly on closepath with SVG files.
  http://code.google.com/p/processing/issues/detail?id=1058

+ PShape and lights results in more lit vertices.
  http://code.google.com/p/processing/issues/detail?id=1342

+ Implement anisotropic filtering when using OPENGL.
  http://code.google.com/p/processing/issues/detail?id=502

+ Update reference for begin/endContour.
  http://code.google.com/p/processing/issues/detail?id=1396

+ Fix "expecting EOF, found 'import'" error on previously working sketch.
  http://code.google.com/p/processing/issues/detail?id=1376

+ Prevent potential race condition when resizing sketches.
  http://code.google.com/p/processing/issues/detail?id=697

+ Mode detection wasn't properly ignoring code inside comments.
  http://code.google.com/p/processing/issues/detail?id=1404

+ Fix error line numbers from command line version to count from one
  instead of zero, so that they're compatible with other systems.
  http://code.google.com/p/processing/issues/detail?id=1392

+ Sketches exported to Linux weren't passed the command line arguments
  http://code.google.com/p/processing/issues/detail?id=1359

+ "electricScroll" feature was causing weird jumps when double-clicking
  http://code.google.com/p/processing/issues/detail?id=1055

+ Crash during library download was causing empty library list
  http://code.google.com/p/processing/issues/detail?id=1093

+ In the net library, clientEvent() called even w/o data from server
  http://code.google.com/p/processing/issues/detail?id=189

+ Add Server.ip() method to get the IP address of the host machine.
  http://code.google.com/p/processing/issues/detail?id=1228

+ Modify “Copy as HTML” to add second HTML data type when writing the clipboard
  http://code.google.com/p/processing/issues/detail?id=1065
  Fix contributed by Ostap Andrusiv--thanks!

+ Shaders are passed wrong defaults when calling "filter" on a PGraphics object
  http://code.google.com/p/processing/issues/detail?id=1301

+ beginContour() behaves differently in immediate and retained modes
  http://code.google.com/p/processing/issues/detail?id=1417

+ P2D/P3D crashes when trying to display unicode text
  http://code.google.com/p/processing/issues/detail?id=1308

+ Fix for PMatrix3D.mult() when vectors are identical
  http://code.google.com/p/processing/issues/detail?id=921

+ Curves weren't rendered seperately when P3D or P2D specified.
  http://code.google.com/p/processing/issues/detail?id=1317

+ FBO handling in PGL is not transparent.
  http://code.google.com/p/processing/issues/detail?id=1282

+ Use of pixels[] array breaks after resize in OpenGL.
  http://code.google.com/p/processing/issues/detail?id=1119

+ No stroke with OpenGL sketches on a 2007 Mac Mini (GMA 950)
  http://code.google.com/p/processing/issues/detail?id=1222

+ ortho() displays strange line widths.
  http://code.google.com/p/processing/issues/detail?id=1285

+ Resizeable frame crashes sketch with AMD video card.
  http://code.google.com/p/processing/issues/detail?id=1175

+ set(x, y, PImage) doesn't work with P2D/P3D.
  http://code.google.com/p/processing/issues/detail?id=1185

+ begin/endShape with a single vertex causing crash on P2D/P3D.
  http://code.google.com/p/processing/issues/detail?id=1421

+ Using a PGraphics as a texture produces visual artifacts.
  http://code.google.com/p/processing/issues/detail?id=1420

[ android ] 

+ Like the desktop release, removed default imports. This includes:
  android.view.MotionEvent, android.view.KeyEvent,android.graphics.Bitmap
  due to conflicts w/ the new event system, and hoping to enforce better
  cross-platform compatibility between Java, JavaScript, and Android modes.

+ Changed event handling to hopefully clean up some inconsistencies.
  Removed motionX/Y/Pressure... these need to be handled separately. 
  More here: http://wiki.processing.org/w/Android

+ mouseX/Y no longer include history with moves, which reduces fidelity 
  a bit, but will hopefully prevent us overdoing it for future releases.

+ Fix how pmouseX/Y are set.
  http://code.google.com/p/processing/issues/detail?id=238
  http://code.google.com/p/processing/issues/detail?id=1018

[ fixed earlier / cleaning ] 

+ When turning smoothing on, internal lines of shapes are visible.
  http://code.google.com/p/processing/issues/detail?id=53

+ textAlign(CENTER) with P3D and OPENGL produces messy result
  http://code.google.com/p/processing/issues/detail?id=65

+ Signature issue on contributed libraries affects unrelated OpenGL sketches
  http://code.google.com/p/processing/issues/detail?id=261

+ Implement efficient version of copy() in PGraphicsOpenGL.
  http://code.google.com/p/processing/issues/detail?id=119

+ copy() does not update the screen with OpenGL.
  http://code.google.com/p/processing/issues/detail?id=118

+ strokeCap() and strokeJoin() for use with OPENGL.
  http://code.google.com/p/processing/issues/detail?id=123

+ Fix inconsistent anti-aliasing with OpenGL.
  http://code.google.com/p/processing/issues/detail?id=217

+ noCursor() + OPENGL = won't get past setup()
  http://code.google.com/p/processing/issues/detail?id=1345

+ set() requires updatePixels() with OpenGL.
  http://code.google.com/p/processing/issues/detail?id=89

+ Chopping out triangles in OpenGL (though it's only 2D drawing).
  http://code.google.com/p/processing/issues/detail?id=193

+ Share interface for 3D across desktop and Android.
  http://code.google.com/p/processing/issues/detail?id=970

+ Distortion of 2D shapes when sphereDetail() is used.
  http://code.google.com/p/processing/issues/detail?id=762

+ OPENGL renderer stops rendering after text is written using textMode(SCREEN)
  http://code.google.com/p/processing/issues/detail?id=710

+ Support 'black' as color for SVG files (fix from PhiLho)
  http://code.google.com/p/processing/issues/detail?id=1010

+ Catch sun.dc.pr.PRException?
  http://code.google.com/p/processing/issues/detail?id=39

+ Image created with img.get() works incorrectly when using filter()
  http://code.google.com/p/processing/issues/detail?id=167

+ copy(image with transparency) doesn't keep the transparency at start up.
  http://code.google.com/p/processing/issues/detail?id=601

+ Defects in the tessellation of SVG shapes in A3D
  http://code.google.com/p/processing/issues/detail?id=291

+ Blacked-out screen when restoring Android app from background.
  http://code.google.com/p/processing/issues/detail?id=381

+ Excessive rotation of application causes memory to run out
  http://code.google.com/p/processing/issues/detail?id=235

+ Should alpha PImage stuff use a non-4byte config?
  http://code.google.com/p/processing/issues/detail?id=242

+ Rounded rect support on Android
  http://code.google.com/p/processing/issues/detail?id=929


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 2.0b6 (REV 0214) - 2 November 2012

Patching up command line issues that went backwards in the last release, 
a number of OpenGL fixes, and more internal changes and updates. 

[ bug fixes ] 

+ Command line support was broken in 2.0b5, with an error about
  processing-java ClassNotFoundException: BatchCompiler
  http://code.google.com/p/processing/issues/detail?id=1334
  On Mac OS X, you may need to re-run the "Install Command Line" tool.

+ Make sure the sketchbook is being picked up on the command line,
  so that imported libraries are handled correctly.

+ Import statements were executed within multiline comments.
  http://code.google.com/p/processing/issues/detail?id=911

+ Editor not responding properly if the "External Editor" preference
  had been enabled with a previous release. 
  http://code.google.com/p/processing/issues/detail?id=1355

+ A number of OpenGL fixes to better handle older chipsets, like the
  GMA 950 (found on lots of older Mac Minis and similar hardware). 

+ Reverted back to an older version of the JOGL library to prevent
  issues with sketches locking up. In particular, this should fix 
  sketches that use the video library: 
  http://code.google.com/p/processing/issues/detail?id=1338
  http://code.google.com/p/processing/issues/detail?id=1364

+ Icon loading was causing an error if you used a package for your code.
  http://code.google.com/p/processing/issues/detail?id=1346

+ No longer using --request on OS X 10.6, since it's not available. 
  Avoids a harmless warning message on the console when running a sketch.

[ changes/additions ] 

+ Added an option to Preferences to enable/disable advanced input method
  support to handle complex scripts like Japanese, Korean, or Chinese.
  http://code.google.com/p/processing/issues/detail?id=526

+ Add option for blinking and/or block caret in the editor. To disable 
  caret blinking in the text editor, add this line to preferences.txt:
  editor.caret.blink = true
  Or to just a block caret, use this:
  editor.caret.block = false
  http://code.google.com/p/processing/issues/detail?id=1136

[ internal ]

+ Removed applet-related preferences, and the 'applet' subfolder in the 
  source/distribution.

+ Removed the old 'cmd' folder from the source/distribution

+ Preferences are now written in sorted order to make it easier to handle
  comparisons or other debugging.

+ Major change to handle how the 'lib' folder is found, hopefully does a 
  better job with command line support.


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 2.0b5 (REV 0213) - 22 October 2012

Fixes for a few regressions that showed up in 2.0b4, plus some internal
changes to simplify how modes are handled.

[ bug fixes ] 

+ Libraries not installed through IDE had blank names.
  http://code.google.com/p/processing/issues/detail?id=1331

+ mouseButton not being set properly on Windows (and probably Linux).
  http://code.google.com/p/processing/issues/detail?id=1332

+ Console disappearing with increased editor font size.
  http://code.google.com/p/processing/issues/detail?id=1275

[ changes/internal ] 

+ Change how modes are set up so that XQMode, our Google Summer of Code
  project can work properly.

+ Implement multiple sizes of icons for PDE and core. This improves 
  the quality of the icon seen on Windows and Linux attached to frames.
  http://code.google.com/p/processing/issues/detail?id=632


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 2.0b4 (REV 0212) - 21 October 2012

Command line support is back! Find and Replace works over multiple tabs!
The Mac OS X version should work again in spite of Apple's best efforts!

[ additions & removals ] 

+ Command line support is now available for Java mode. On Windows and Linux, 
  use the processing-java program. On Mac OS X, there's an option in the 
  Tools menu to install the command line tool. 
  http://code.google.com/p/processing/issues/detail?id=142

  Build and export options should even work in headless mode when enabled
  (no guarantees, but simple test results were promising).
  http://code.google.com/p/processing/issues/detail?id=220

  Android and JavaScript mode are not supported, contributions are welcome:
  http://code.google.com/p/processing/issues/detail?id=1323

+ Added a Tool for Mac OS X to help set up serial port. Using serial on 
  OS X requires some incantations on the command line, and this prompts for
  an administrator password and takes care of them for you. The commands
  involve creating a folder and setting a few permissions. If everything 
  is already set properly, the Tool will not be present in the Tools menu.

+ With the arrival of command line support, the misunderstood and sometimes
  maligned "Use External Editor" option has been removed. 
  http://code.google.com/p/processing/issues/detail?id=515

+ Fix several problems introduced by Apple's recent Java "update".
  Apple's most recent Java update may render older versions of Processing
  completely unusable, it's not quite clear yet. 

[ bug fixes ] 

+ Fix the exceptionally slow startup (a 5 second delay) in recent releases.

+ Find & Replace over multiple tabs (thanks to Manindra Moharana for the patch!)
  http://code.google.com/p/processing/issues/detail?id=25

+ calling jump() resets movie speed
  http://code.google.com/p/processing/issues/detail?id=1303

+ Fixed sketch renaming regression in underscore handling
  http://code.google.com/p/processing/issues/detail?id=1310

+ Fix library manager temporary folder problem on Linux)
  http://code.google.com/p/processing/issues/detail?id=1295

+ Default sketchbook folder was going to wrong location on Linux
  http://code.google.com/p/processing/issues/detail?id=1286

+ mouseButton wasn't getting set on mouseReleased()
  http://code.google.com/p/processing/issues/detail?id=1294

[ technical updates ] 

+ JOGL has been updated, which may help iron out some GL quirks.

+ Change all build.xml files to use Java 6 as both source and target
  (avoids Java 7 warnings during build).

+ Updated ecj.jar to use jdt-core.jar... This is a larger file but were 
  hoping that this would get our GSoC project "XQMode" working without
  the need for patches. Sadly that's not the case, but stay tuned.

[ known issues ] 

+ Fewer exclamation points will be used to introduce future releases.


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 2.0b3 (REV 0211) - 10 September 2012

Shaking out the beta bugs.

[ major fixes ] 

+ registerMethod("keyEvent", ...) not calling key event methods.
  http://code.google.com/p/processing/issues/detail?id=1225

+ "Processing is damaged and should be put in the trash" with 2.0b2.
  Apple's asinine code signing strikes back!
  http://code.google.com/p/processing/issues/detail?id=1226

+ Restore deprecated versions of getFont() and getImage() to address
  library compatibility issues. The similar getBitmap() and getTypeface() 
  methods on Android will not be restored.
  http://code.google.com/p/processing/issues/detail?id=1223

[ minor fixes ] 

+ Changing the default display in Preferences does not reset editor 
  location, so it appears to have no effect.
  http://code.google.com/p/processing/issues/detail?id=1162

+ Remove bad cast in PGL during error reporting.

+ Make Mode menu into a radio button, so it cannot be de-selected
  http://code.google.com/p/processing/issues/detail?id=1227

[ changes and additions ] 

+ Show error message when using createGraphics() with P2D, P3D, or OPENGL
  and the main drawing surface is not an OpenGL renderer.
  http://code.google.com/p/processing/issues/detail?id=1217

+ Make file selectable from the OS X menu bar. Thanks to Hansi for the
  patch. Note that this only works for sketches that have been saved.
  http://code.google.com/p/processing/issues/detail?id=1215

+ Added registerMethod(keyEvent) to Android, though motion and mouse
  events are still unavailable.

+ Cleaning up the internals of Preferences and untitled sketches.
  Fingers crossed that these don't give us last-minute regressions.


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 2.0b2 (REV 0210) - 7 September 2012

One major fix for libraries that use key events, and a number of minor 
fixes that we've found along the way. 

[ fixes and updates ] 

+ Libraries with using key events were reporting:
  "java.lang.IllegalArgumentException: argument type mismatch"
  in beta 1, this is now fixed. 

+ Added hint(ENABLE_STROKE_PURE) to deal with Java 2D regression.
  http://code.google.com/p/processing/issues/detail?id=1137

+ Fix for stroke with beginShape(TRIANGLE_FAN)
  http://code.google.com/p/processing/issues/detail?id=1137

+ hint() documentation now updated (except for the hint above). 
  http://code.google.com/p/processing/issues/detail?id=1144

+ Using ortho() breaks stroke rendering
  http://code.google.com/p/processing/issues/detail?id=1207

[ fixed earlier ] 

+ POINTS mode vertices are huge
  http://code.google.com/p/processing/issues/detail?id=1037

+ Potentially insufficient ellipse detail with P3D/OPENGL when scaled
  http://code.google.com/p/processing/issues/detail?id=87

+ Implement support for complex shapes when using the OpenGL renderer 
  http://code.google.com/p/processing/issues/detail?id=122

+ modelX/Y/Z broken when aiming a camera
  http://code.google.com/p/processing/issues/detail?id=148

+ OpenGL broken with JDK 7 on OS X, fixed with new JOGL updates
  http://code.google.com/p/processing/issues/detail?id=1070

+ Problems with OpenGL example sketches
  http://code.google.com/p/processing/issues/detail?id=902

+ Memory improvements for updatePixels() with OpenGL (P2D and P3D)
  http://code.google.com/p/processing/issues/detail?id=77

+ Text characters showing up as opaque rectangles 
  http://code.google.com/p/processing/issues/detail?id=80

+ Changing framerate causes program to crash with P2D in 2.0a6
  http://code.google.com/p/processing/issues/detail?id=1116

[ android ] 

+ Updated examples from Andres and categories in the examples browser.


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 2.0b1 (REV 0209) - 3 September 2012

Bug fixes, new registered methods for libraries, updated keywords,
and we're beta!

[ changes ] 

+ Require 10.6.8 as minimum Mac OS X system version. 

+ Change name from "Standard" to "Java" mode.

+ Save opened/closed state of entries in the examples browser
  http://code.google.com/p/processing/issues/detail?id=827

+ Lots of internal changes to loadShape() and PShape. 

+ Work on making API more generic and consistent for cross-platform use.
  Font PFont.getFont() -> Object PFont.getNative()
  Typeface PFont.getTypeface() -> Object PFont.getNative()
  Image PImage.getImage() -> Object PImage.getNative()
  Bitmap PImage.getBitmap() -> Object PImage.getNative()

+ beginGL() and endGL() are gone, and beginPGL() and endPGL() exist 
  in their place. The PGL class is a layer that lets us talk to 
  OpenGL in a way that's cross-platform and consistent. It also has
  many GL calls for people who want to access GL directly.

+ New syntax introduced for libraries and registered methods. 
  Documentation coming soon.

[ bug fixes ] 

+ Handle dimming the Find/Replace buttons.
  http://code.google.com/p/processing/issues/detail?id=1056

+ Any double-click inside Examples window opened the last selection on Windows
  http://code.google.com/p/processing/issues/detail?id=1201

+ loadImage() with spaces in path broken with exported applications on OS X
  http://code.google.com/p/processing/issues/detail?id=1073

+ Minor speed fix for PVector.limit()
  http://code.google.com/p/processing/issues/detail?id=1122

+ Jagged / Glitchy JAVA2D shape strokes in Java 1.6 due to recent
  change introduced in Java update from Oracle.
  http://code.google.com/p/processing/issues/detail?id=1068

+ GL Android sketches halting after rotation.
  http://code.google.com/p/processing/issues/detail?id=1146

[ known issues ] 

+ createShape() is not implemented with the default 2D renderer.

+ See the Changes page on the Wiki for more. 


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 2.0a9 (REV 0208) - 1 September 2012

As we inch closer to beta, a quick release for testing. 

Plenty of video and OpenGL graphics fixes from Andres, and some functions
disappearing due to cleanups by Ben. (Andres giveth, Ben taketh away). 

Consider this one to be 'nightly build' quality. 

[ general ] 

+ Help menu broken when Processing has spaces in its path name in 2.0a8
  http://code.google.com/p/processing/issues/detail?id=1164

+ We now have repeating textures. Use textureWrap(CLAMP) (the usual
  version) or textureWrap(REPEAT). If this feature is used for evil
  and cheesiness, it will be removed in future releases. 
  http://code.google.com/p/processing/issues/detail?id=94

+ Fix lights in GL renderers on low-end android devices.
  http://code.google.com/p/processing/issues/detail?id=1145

+ Pixels for createGraphics() now transparent for P2D, P3D.
  http://code.google.com/p/processing/issues/detail?id=1156

[ video ] 

+ GettingStartedCapture in 2.0a8 launches X11 in Mountain Lion
  http://code.google.com/p/processing/issues/detail?id=1191

+ Some videos were giving OpenGL error with P2D/P3D.
  http://code.google.com/p/processing/issues/detail?id=1166

+ Jump movie to multiple of the framerate for better accuracy.
  http://code.google.com/p/processing/issues/detail?id=1182

+ Movie functions not working correctly in setup().
  http://code.google.com/p/processing/issues/detail?id=1181

+ Fix initialization API for Capture.
  http://code.google.com/p/processing/issues/detail?id=1184

+ Some movie examples were not working in P2D, P3D in 2.0a8
  http://code.google.com/p/processing/issues/detail?id=1178

+ Wrong resolutions reported by Capture.list()
  http://code.google.com/p/processing/issues/detail?id=1192

[ advanced ] 

+ Several constants moved out of PConstants and into PGraphics.

+ API cleanup to PShape and unapproved methods.

+ Synchronized Android sources a bit (PShape, PConstants, etc.)

+ Removed several video functions that weren't approved.


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 2.0a8 (REV 0207) - 5 August 2012

A handful of bug fixes. Not as large a release as 2.0a7, but I decided 
it best to get the updates out there and in use rather than waiting for
beta 1 since I'm not sure when we'll be able to get that out. 

[ miscellaneous ] 

+ Make sure smooth() is the default with both renderers
  http://code.google.com/p/processing/issues/detail?id=1157

+ "Open" dialog on Linux wasn't showing directories
  http://code.google.com/p/processing/issues/detail?id=1151

+ Double-click was immediately closing example folder (Windows and Linux)
  http://code.google.com/p/processing/issues/detail?id=1150

+ Support native code in Android libraries. Thanks to m4rlonj for the patch!
  http://code.google.com/p/processing/issues/detail?id=1117

+ Don't expand the folders in the examples window (Casey request)

+ Added cmd-shift-O (ctrl-shift-O) for opening examples window

+ Added recent sketches menu to the toolbar

+ Added 'empty sketchbook' indicator when the sketchbook menus are empty

+ Prevent users from deleting the last tab on the only sketch that is 
  currently open on Windows and Linux. 

[ serial ] 

+ Added 64-bit RXTX for Mac OS X serial from this page:
  http://blog.iharder.net/2009/08/18/rxtx-java-6-and-librxtxserial-jnilib-on-intel-mac-os-x/

+ Added warning message on Mac OS X when /var/lock folders aren't available
  http://code.google.com/p/processing/issues/detail?id=944
  http://code.google.com/p/processing/issues/detail?id=937

+ bufferUntil() with values above 127 do not work properly
  http://code.google.com/p/processing/issues/detail?id=1079

[ plumbing ] 

+ Switch to using java.awt.Desktop classes for opening folders, links, etc.

+ Include createTextArea() in Editor for the GSOC projects.

+ Add code for setting the L&F from the prefs file for Linux.

+ Added 'all tabs' checkbox to Find & Replace, but not implemented yet.
  This would be a great project for someone to finish:
  http://code.google.com/p/processing/issues/detail?id=25

+ Added notes about "color(0, 0, 0, 0) produces black" to the Wiki.


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 2.0a7 (REV 0206) - 29 July 2012

Hopefully the last alpha before we hit 2.0 beta. 

The big change is that we're dropping support for applets in 2.0, and in
this release. See the Changes section of the Wiki for details. We've not
updated all of the documentation to reflect this yet.

OS X 10.8 Mountain Lion support has also been added, by virtue of our 
paying $99/year for the privilege of releasing our free and open source
application on OS X. When run on 10.8, versions prior to 2.0a7 would report
that they were corrupt, invalid, or not trusted. Which is definitely us. 

[ editor ] 

+ Implemented a "Recent Sketches" menu. This replaces re-opening 
  sketches on startup, which behaved inconsistently anyway. 
  http://code.google.com/p/processing/issues/detail?id=188

+ Use Swing file choosers by default on Linux. The default open/save
  dialogs provided by Java are pretty gruesome, so we're switching to 
  the Swing JFileChooser instead. To swap the behavior, set 
  'chooser.files.native' in your preferences.txt file.

+ Suppress "invalid context 0x0" and "invalid drawable" because they're
  (unfixable) Apple Java bugs and being reported as Processing bugs.
  Also suppress XInitThreads message on Linux with JOGL, which is a
  JOGL bug that'll hopefully be fixed in their next release.

+ Fix Movie Maker tool on OS X.

+ Update to Java 6 update 33 on Windows and Linux.

+ Add separate 32- and 64-bit releases for Windows and Linux. Lots of other
  updates for 32/64-bit support in general.
  http://code.google.com/p/processing/issues/detail?id=955

+ Replace processing.exe with a more standard version from launch4j, 
  which should hopefully clean up some launcher issues.
  http://code.google.com/p/processing/issues/detail?id=943
  http://code.google.com/p/processing/issues/detail?id=176

+ Change how sketches open so that there's no longer differences between
  the File menu 'Open' and the way it worked from the toolbar. Simplifies 
  additional code that was quirky.
  http://code.google.com/p/processing/issues/detail?id=1034

+ Add a warning dialog for libraries that aren't compatible.
  http://code.google.com/p/processing/issues/detail?id=884

+ Fix up the file choosers used on Linux.
  http://code.google.com/p/processing/issues/detail?id=1014

+ Instead of prompting for sketchbook location on Linux, just default to
  a folder named 'sketchbook' in the user's home directory. This can easily
  be changed later but simplifies things internally a bit. 

+ No longer allow underscore at beginning of sketch name (causes problems 
  with Android, and also with applets, though we care less about those...)
  http://code.google.com/p/processing/issues/detail?id=1047

+ Fixed a problem where sanitized names (underscores replacing unusable 
  characters) could potentially overwrite existing folders.

[ core ] 

+ Major changes to selectInput(), selectOutput(), and selectFolder(). 
  See the Wiki: http://wiki.processing.org/w/Changes#Change_and_Removed
  The changes are there to prevent a threading bug:
  http://code.google.com/p/processing/issues/detail?id=173
  http://code.google.com/p/processing/issues/detail?id=931
  And also include an option to set the default file path:
  http://code.google.com/p/processing/issues/detail?id=233

+ Change 'appletViewer' back to 'online'. Still deprecated, especially
  because applets are going away. 

+ Add begin/endGL added to PGraphics/PApplet. 

+ Add hasChildren() to XML library.
  http://code.google.com/p/processing/issues/detail?id=1045

+ Fix where displayWidth/Height not being set properly before setup()
  http://code.google.com/p/processing/issues/detail?id=1120

+ XML now throws exceptions in its constructor (for advanced users). 
  Use loadXML() instead of "new XML(this, ....)" 
  http://code.google.com/p/processing/issues/detail?id=1138

+ loadXML() returns null when the file did not open properly
  http://code.google.com/p/processing/issues/detail?id=1138

+ ortho() causing line and fill to be misaligned
  http://code.google.com/p/processing/issues/detail?id=1143

+ Add some extra options for PApplet.main() for advanced users:
  PApplet.main("SketchName") and PApplet.main("SketchName", args) 

[ android ] 

+ Add full PAppletMethods implementation to Android, so that PGraphics  
  and PImage methods are brought into PApplet.

+ Swap Run on Device and Run on Emulator
  http://code.google.com/p/processing/issues/detail?id=1083

+ Fix XML crash on loading because of desktop-specific attribute
  error: "http://apache.org/xml/features/nonvalidating/load-external-dtd"
  http://code.google.com/p/processing/issues/detail?id=1128
  This also fixes PShape on Android:
  http://code.google.com/p/processing/issues/detail?id=1054


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 2.0a6 (REV 0205) - 1 June 2012

Lots of changes since the last update as we move closer to beta.

Major updates for 2.0 can be seen on the Changes page of the Wiki:
http://wiki.processing.org/w/Changes

[ changes ]

+ Lots of updates to how full screen, multiple displays, etc work:
  http://wiki.processing.org/w/Window_Size_and_Full_Screen

+ Added an option for selecting the default display inside Preferences.

+ P2D and P3D are now variations of the OpenGL renderer. 

+ XML and Table are now part of the processing.data.* package. 
  There's also new loadTable() and loadXML() methods in PApplet.

[ bug fixes ]

+ Renaming .pde to .java (or vice versa) complains
  http://code.google.com/p/processing/issues/detail?id=776
  regression from: http://processing.org/bugs/bugzilla/543.html

+ handleFindReference in Editor.java should be public for alternative modes (?)
  http://code.google.com/p/processing/issues/detail?id=713

+ Base.listFiles does not list recursively if extension is given
  http://code.google.com/p/processing/issues/detail?id=718

+ ByteUnderflowException thrown and Font not reported
  http://code.google.com/p/processing/issues/detail?id=442

+ Convert tabs to spaces when pasting text
  http://code.google.com/p/processing/issues/detail?id=69

+ Fixed up some of the error messages inside Compiler.

+ When internal tools crash, don't add them to the menu
  (prevents the PDE from locking up on startup).

[ fixed earlier ] 

+ Export reports "Could not copy source file" (even though it works)
  http://code.google.com/p/processing/issues/detail?id=638

+ Preferences window not visible on taskbar
  http://code.google.com/p/processing/issues/detail?id=63

+ Paste value into color picker tool does not update box-slider
  http://code.google.com/p/processing/issues/detail?id=68

+ Unable to access Javascript examples
  http://code.google.com/p/processing/issues/detail?id=909

+ Closing sketch file closes applet
  http://code.google.com/p/processing/issues/detail?id=606

[ core ]

+ Add support for println(long) because it was converting the type to float
  http://code.google.com/p/processing/issues/detail?id=969

+ createGraphics for JAVA2D generates the wrong error msg w/ w/h <= 0
  http://code.google.com/p/processing/issues/detail?id=983

+ Removed NanoXML, added save() method, other wish list features.
  http://code.google.com/p/processing/issues/detail?id=904

+ Fix whitespace issue with XML
  http://code.google.com/p/processing/issues/detail?id=975

+ Make displayWidth/Height work properly with multiple screen.
  (In the past, screen.width and screen.height just returned the default
  display size, not necessarily the display being used.) 

+ Built in Hansi's full screen API for OS X, so that sketches can use
  full screen without exclusive mode. See the Wiki for details.
  http://wiki.processing.org/w/Window_Size_and_Full_Screen

+ Now attempts detect when a sketch's size is the full screen, 
  and if so removes the frame border, etc.

+ --display option now works properly (on OS X and elsewhere)
  http://code.google.com/p/processing/issues/detail?id=71

[ OpenGL by Andres ] 

+ polygon shapes without fill slowdown render progressively
  http://code.google.com/p/processing/issues/detail?id=1028

+ screenY(x,y,z) returns incorrect coordinate
  http://code.google.com/p/processing/issues/detail?id=1007

+ lights() behaving differently with OPENGL2 than original OPENGL
  http://code.google.com/p/processing/issues/detail?id=619

+ directionalLight() is wrong on box()
  http://code.google.com/p/processing/issues/detail?id=966

+ PShape3D uses a lot of memory
  http://code.google.com/p/processing/issues/detail?id=1046

+ triangle in first ring of sphere() not being made properly
  http://code.google.com/p/processing/issues/detail?id=1005

+ beginRaw() not working with 3D
  http://code.google.com/p/processing/issues/detail?id=744

+ set() in 3D does not work on 2.0a5
  http://code.google.com/p/processing/issues/detail?id=1069

+ frustum() and ortho() broken in P3D
  http://code.google.com/p/processing/issues/detail?id=867

+ get() with OPENGL is grabbing the wrong part of the image
  http://code.google.com/p/processing/issues/detail?id=191

+ OpenGL noSmooth() does not work
  http://code.google.com/p/processing/issues/detail?id=328

[ android ] 

+ Android SDK Tools revision 19 (later may work too) are required.

+ Android mode no longer broken on Windows. Google has fixed the bug, 
  but you'll need to use the latest SDK.
  http://code.google.com/p/processing/issues/detail?id=1022

+ GL2 specific code in Processing 2.0a5 break P3D on GLES2 hardware
  http://code.google.com/p/processing/issues/detail?id=1029

+ OpenGL/ES requires precision specifier on float types
  http://code.google.com/p/processing/issues/detail?id=1035

+ loadShape() with obj files was broken in 2.0a5
  http://code.google.com/p/processing/issues/detail?id=1048

+ camera() and arc() now work together
  http://code.google.com/p/processing/issues/detail?id=751


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 2.0a5 (REV 0204) - 23 March 2012

Major updates in this release include a huge revamp of the OpenGL library
by Andres, fixes to get Android Mode working again, and a number of bug 
fixes and additions as we head toward 2.0.

Unfortunately, however, Android mode is still broken on Windows.
http://code.google.com/p/processing/issues/detail?id=1022

On the OpenGL front, we're working to have a single library that works 
across both desktop and mobile, which is good news because it means we have 
a fighting chance of making it work (rather than maintaining two entire sets 
of a very complicated set of code), but the downside is that it requires 
newer versions of OpenGL on both the desktop and mobile, so it may cause 
problems with old OSes, mediocre graphics drivers, etc that worked with 
earlier releases.

[ bug fixes ] 

+ OpenGL applets are working again.
  http://code.google.com/p/processing/issues/detail?id=845

+ Abnormal high Java CPU usage at empty sketch with draw() 
  http://code.google.com/p/processing/issues/detail?id=729

+ "Framingham" example has BufferOverflowException
  http://code.google.com/p/processing/issues/detail?id=900

+ Repeatedly calling texture() with new image raises memory error
  http://code.google.com/p/processing/issues/detail?id=806

+ Doc comments not being properly terminated in export of applet
  http://code.google.com/p/processing/issues/detail?id=877

+ Tweaks to the code to prevent multiple copies of Processing from 
  running at once.

+ Fix bug with 'base' not getting set in the Mac OS X platform class.

+ Syntax highlighting not case sensitive in 1.5 through 2.0+
  http://code.google.com/p/processing/issues/detail?id=913

+ Fix problem with application export on Linux
  http://code.google.com/p/processing/issues/detail?id=945

+ Fix PImage.get() issue with width or height < 0.

+ (Mostly failed) attempts to improve the performance of tint() with Java2D.

+ Fix so that normals aren't attempted when no texture is set.

+ Several bug fixes inside Table as they relate to inserting/adding columns.

[ changes/additions ] 

+ Enable smooth() by default.

+ Added setContent() to the XML library, other tweaks to XML export.

+ Make note of when library is not available (serial) with error msg
  i.e. if running in 64-bit mode on OS X, can't do serial

+ Update to Java 6u29 for Linux and Windows (OS X now updated).

+ Don't show library conflict warning until someone tries to build 
  with code that actually calls on one of those packages.

+ urlEncode() and urlDecode() added (docs coming later).

+ delay() is back again. F*king delay().

+ Added anti-alias methods so that FSAA can set up properly. The API for
  these is not set yet. 

[ in earlier releases ] 

+ Commenting via menu or shortcut does not set sketch to "need save".
  http://code.google.com/p/processing/issues/detail?id=860

+ Moved the data folder outside the main jar in exported applications.
  Otherwise enormous files are sometimes added to the jar, which makes
  things needlessly slow.

+ Create new MovieMaker tool to write uncompressed QuickTime movies.
  www.randelshofer.ch/blog/2010/10/writing-quicktime-movies-in-pure-java

+ Library imports failing for libs that define the same packages in 1.5.1
  http://code.google.com/p/processing/issues/detail?id=725

+ Closing applet window in Processing 1.5 causes serial crash.
  http://code.google.com/p/processing/issues/detail?id=635

[ javascript ] 

+ Finalize JavaScript mode export folder name.
  http://code.google.com/p/processing/issues/detail?id=848

+ Intermittent hangs of PDE when launching JavaScript Server
  http://code.google.com/p/processing/issues/detail?id=936


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 2.0a4 (REV 0203) - 10 November 2011

This is just a quick release so that I can procrastinate on packing for
Chicago a little longer. A handful of bug fixes here:

+ Video capture was broken in 2.0a3 on OS X due to an issue with the build 
  process. Should be all set now.

+ Fixed incessant "inefficient font rendering" debug message on Android.

+ Fixed android/code/build.xml to point at the correct SDK version.

+ Changing between 32- and 64- bit mode on OS X wasn't properly reloading
  library paths. Now it should pick up the necessary 32- and 64-bit version
  of a library that's needed. (However there are still no useful error
  messages when natives aren't available for the platform--just an
  UnsatisfiedLinkError when you try to run. Will fix.)

[ andres' bug victims ] 

+ Multiple calls to curve() connect subsequent curves with lines in P3D/OPENGL
  http://code.google.com/p/processing/issues/detail?id=865

+ Arc not drawn in P3D and OpenGL mode (2.0a2)
  http://code.google.com/p/processing/issues/detail?id=890


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 2.0a3 (REV 0202) - 5 November 2011

Some weekend bug fixing and regression repair for the recent alpha releases.

Also several Android fixes to get things working again with more recent 
updates from Google. You'll need to upgrade to this version of Processing 
in order to continue using Android mode.

[ environment ] 

+ Fix problem with serial not loading on Mac OS X.

+ Fix problem with popup menus on the toolbar disappearing immediately
  when used on Mac OS X 10.7 (Lion).
  http://code.google.com/p/processing/issues/detail?id=846
  http://code.google.com/p/processing/issues/detail?id=887

+ Incorrect tab/line shown for preprocessor errors when more than 2 tabs
  http://code.google.com/p/processing/issues/detail?id=873

+ Commenting via menu or shortcut does not set sketch to "need save"
  http://code.google.com/p/processing/issues/detail?id=766

+ IDE Export Application button exports applet (fixed in 2.0a2)
  http://code.google.com/p/processing/issues/detail?id=863

[ core ] 

+ Fix for video frames not showing up in 3D.

+ Rounded rect() does not have a maximum length for corner radius
  http://code.google.com/p/processing/issues/detail?id=813

[ android ] 

+ Fix libraries when used with Android. Libraries can also specify
  an Android version by including an 'android' subfolder.
  http://code.google.com/p/processing/issues/detail?id=766

+ Fix problem with export menu, keys, toolbar being different.

+ Change default package name a bit.

+ Switch to SDK 8 (Android 2.2) as the minimum that we're supporting.
  This allows us to rely on far more consistent OpenGL implementations.

+ Update the project files for Android SDK Tools Revision 15 (now required)
  http://code.google.com/p/processing/issues/detail?id=876

+ Improve launching with the emulator.

+ Remove 'includeantruntime' warning during build.

+ "Date could not be parsed" error.
  http://code.google.com/p/processing/issues/detail?id=864


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 2.0a2 (REV 0201) - 31 October 2011

Happy Halloween! I'll be dressing up as an ArrayIndexOutOfBoundsException.

This release is primarily focused on the new video library and making it
usable across platforms. It also has some changes for how applications 
are exported, and a number of other bug fixes and tweaks.

[ platforms ] 

+ With this release, Java 1.6 is now required. We will no longer be 
  supporting Java 1.5.

+ In perhaps related news, we are no longer supporting Mac OS X 10.5.
  We have to support 10.6 and 10.7 across both 32- and 64-bit, and adding
  yet another to that is simply not possible.

[ 32- and 64-bit support is a nightmare ]

+ A great deal of effort is being put into supporting the emergence of
  64-bit. Library support has changed significantly to get things working,
  more on this coming soon.

+ Serial on Mac OS X and Windows is currently only available for 32-bit. 
  Hoping someone can help us support a 64-bit version sometime soon. 

+ When exporting a 64-bit application for Windows, a .bat file is created,
  because our .exe doesn't yet support 64-bit. Assuming you have a 64-bit
  JVM installed, the .bat file should load things properly.

+ Because serial only supports 32-bit on OS X, exporting an application 
  that uses serial will only create a application.macosx32 folder, which 
  is a 32-bit app for Mac OS X. No application.macosx64 will be created, 
  nor will a universal application.macosx folder. This is also the case 
  for other libraries that have only 32- or 64-bit support. See earlier
  note that 32- and 64-bit support is an f*ing nightmare.

[ video ] 

+ The most significant change in this release is that the new video library
  from Andres (based on his old gsvideo library) is nearing fully fucntional.

+ MovieMaker is going to be replaced by a Tool that allows you to sequence
  a set of images together into a movie file. The tool currently has a GUI
  bug that breaks it, but this will be fixed sometime soon.

[ other changes ]

+ Application is now the default export (instead of Applet). 

+ Change to how dataPath() and dataFile() work. This is an undocumented
  function, but for those using it, here's the skinny: 

  dataPath() is only available with applications, not applets or Android.
  On Windows and Linux, this is simply the data folder, which is located
  in the same directory as the EXE file and lib folders. On Mac OS X, this
  is a path to the data folder buried inside Contents/Resources/Java.
  For the latter point, that also means that the data folder should not be
  considered writable. Use sketchPath() for now, or inputPath() and
  outputPath() once they're available in the 2.0 release.

  dataPath() is not supported with applets because applets have their data
  folder wrapped into the JAR file. To read data from the data folder that
  works with an applet, you should use other methods such as createInput(),
  createReader(), or loadStrings().

+ Additional library files included with application exports are now placed 
  in the 'lib' folder on Linux and Windows, or buried inside the OS X app.
  This helps prevent the unsightly mess of DLLs that were crowding the
  root folder of exported applications on Windows and Linux.

+ If noLoop() has been called but a sketch is resized, redraw() will be 
  called to update the screen.


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 2.0a1 (REV 0200) - 2 September 2011

First alpha release as we head toward 2.0. Please read the changes page 
to learn about what's different: http://wiki.processing.org/w/Changes

[ since we last spoke ] 

+ Lots of video work from Andres. 

+ Updated to Java 6u26 on Windows and Linux.

+ HTML escapes for < and > were not working properly
  http://code.google.com/p/processing/issues/detail?id=771

+ Quit if multiple instances of Processing are running (see the Wiki).

+ Fixed another problem with missing shearX/Y() in JAVA2D
  http://code.google.com/p/processing/issues/detail?id=784

+ Removed textMode(SCREEN).

+ Added expand(long) and expand(double) because of Table.

+ PImage.save() with full path raises exception
  http://code.google.com/p/processing/issues/detail?id=808

+ Fix problem where loading data from an http:// stream would 
  run out of memory on Android. 


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING REV 0199 - 27 June 2011

Handful of bug fixes, primarly to deal with issues introduced in 0198. 

+ Remove error messages for UpdateCheck w/o internet connection.

+ char c = 'u' breaks sketches in 0198
  http://code.google.com/p/processing/issues/detail?id=752
  Also additional fixes to handling bad character constants in the preprocessor

+ Deal with extraneous error messages about the emulator and AVD when trying
  to run Processing on an Android device.

+ Fix broken loadShape().

+ Fix broken loadNode() and XML usage in general.

+ Fix problem with save() writing multiple image files with an extra .tif
  at the end. 

+ Added no-op orientation() method to the desktop version so that code
  will work unchanged between Android and desktop.

+ Add warning for missing glyphs in PFont. 


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING REV 0198 - 23 June 2011

Major internal work as we start blowing things up for 2.0. The main things are
covered on the changes page in the Wiki: http://wiki.processing.org/w/Changes

This is an interim release so that Andres can do a workshop. Not recommended
for casual use. Hostile or belligerent whiners need not apply.

Android mode has received zero testing, so XML, SVG, 3D, and other major 
features may be broken. See statement directly above.

[ bugs fixed ] 

+ Examples window placed off-screen when PDE window is maximized
  http://code.google.com/p/processing/issues/detail?id=669

+ Make examples window respond to ESC, and double-click events to 
  expand/collapse nodes.

+ Launch script for Linux fails to open a sketches with relative paths
  http://code.google.com/p/processing/issues/detail?id=707

+ Badly formed character constant exception
  http://code.google.com/p/processing/issues/detail?id=714

+ Resize box on OS X is not present in Examples box
  http://code.google.com/p/processing/issues/detail?id=730

+ New/Rename Tab commands inhibited when Console/Message Area is hidden
  http://code.google.com/p/processing/issues/detail?id=745

+ Make sketch.properties usable elsewhere by loading/reloading
  http://code.google.com/p/processing/issues/detail?id=722

+ Export to Application reports "Could not copy source file:" 
  http://code.google.com/p/processing/issues/detail?id=638

+ Automatically insert the 'import processing.opengl' when P3D used.

+ Export Application Fails When Large File in Data Folder
  http://code.google.com/p/processing/issues/detail?id=747

[ reference ]

+ Add some notes about how to work with deployJava.js and applets
  http://dev.processing.org/bugs/show_bug.cgi?id=1259

[ core ]

+ Added quadraticVertex() method to do a quadratic bezier vertex.

+ More efficient version of copy() added for 2D.

+ Implemented rounded rectangle method.
  http://code.google.com/p/processing/issues/detail?id=265

+ Removed the delay() method. It was awful.

+ Addded thread() method that takes a function name as a parameter, 
  and runs it on its own thread. No more classes!

+ PImage.save() returns a success boolean (rather than throwing an 
  exception when it fails).

[ core bugs fixed ]

+ saveBytes() error when writing to existing file
  http://code.google.com/p/processing/issues/detail?id=667

+ problem with destroy() calling System.exit()
  http://code.google.com/p/processing/issues/detail?id=698

+ post() is called after setup() 
  http://code.google.com/p/processing/issues/detail?id=455

+ Remove auto-sizing from binary() (was inconsistent with hex() method).

[ libraries ]

+ Reverted back to the older serial libs, which should improve stability a bit.
  Also grabbed the 64 bit Linux driver and a patch for /dev/ttyACM0 from
  the Arduino guys. Thanks to Dave Mellis for the pointer.
  http://code.google.com/p/processing/issues/detail?id=634

+ Fix applet exporting for new OpenGL, also fixes signed applet requirement.
  http://code.google.com/p/processing/issues/detail?id=429

+ New XML library that more accurately reflects how DOM parsing works.
  Also straightening out the API a bit. Documentation to come later.
  http://code.google.com/p/processing/issues/detail?id=277
  http://code.google.com/p/processing/issues/detail?id=440

[ andres' bag of awesome ]

+ Finish OPENGL2 renderer
  http://code.google.com/p/processing/issues/detail?id=495

+ Using createGraphics() image repeatedly runs out of memory with OPENGL
  http://code.google.com/p/processing/issues/detail?id=483

+ Resizing window in OPENGL breaks ImageCaches
  http://code.google.com/p/processing/issues/detail?id=184

+ Resize not working in revision 5707
  camera() and perspective() were commented out in setSize()
  http://dev.processing.org/bugs/show_bug.cgi?id=1391

+ Resizing opengl destroys context and textures
  http://dev.processing.org/bugs/show_bug.cgi?id=1176

+ Implement repeating textures
  http://code.google.com/p/processing/issues/detail?id=94

[ android ] (these were missing from the actual release notes)

+ mask() has no effect unless image has already been drawn in A3D
  http://code.google.com/p/processing/issues/detail?id=623

+ point() doesn't render in A3D
  http://code.google.com/p/processing/issues/detail?id=592

+ excessive rotation of application causes memory to run out
  http://code.google.com/p/processing/issues/detail?id=235

+ mirroring in A3D when background() not called within draw()
  http://code.google.com/p/processing/issues/detail?id=624

+ removed A2D and A3D constants

+ colorMode() error 
  http://code.google.com/p/processing/issues/detail?id=223


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 1.5.1 (REV 0197) - 15 May 2011

This release fixes a handful of regressions and quirks that were found in
the Processing 1.5 release last month. 

[ editor ] 

+ Windows splash screen for version 1.5 says "1.2"
  http://code.google.com/p/processing/issues/detail?id=631

+ "Import Library" was broken for several built-in libraries.
  http://code.google.com/p/processing/issues/detail?id=637

+ Fixed broken update checker.

+ Reverted to the old shell script on Linux.
  http://code.google.com/p/processing/issues/detail?id=633

+ Applets exported on Windows can't find files in the data folder.
  http://code.google.com/p/processing/issues/detail?id=666

+ File > New and Command-N stop working on OS X after running a sketch
  http://code.google.com/p/processing/issues/detail?id=664

[ core ] 

+ Reverted to the old createFont() behavior, where native fonts will
  be used with createFont() in more situations.
  http://code.google.com/p/processing/issues/detail?id=662

[ svg ] 

+ Improve handling of transformations in SVG files.
  http://code.google.com/p/processing/issues/detail?id=388

+ Fix bug in SVG parser for shorthand curves (T/t and S/s)
  http://code.google.com/p/processing/issues/detail?id=350

+ Prevent shape(PshapeSVG) from failing if SVG contains <path d=""/>
  http://code.google.com/p/processing/issues/detail?id=434

+ Fix misshapen quadratic bezier curves when drawing SVG files.

[ examples ] 

+ HsvSpace example sketch in 1.5 download requires additional import
  http://code.google.com/p/processing/issues/detail?id=661

+ Obsolete Network > HTTPClient sketch
  http://code.google.com/p/processing/issues/detail?id=655


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


PROCESSING 1.5 (REV 0196) - 17 April 2011

A lot has changed in the nine months since 1.2.1 was released, the biggest
being the introduction of "modes" for the editor, allowing you to switch
between Android development or the classic desktop/web mode. More modes are
coming in future releases.

Another significant change is a fix for applets that were stuttering or 
appearing to run very, very slowly in Firefox 4 and Chrome. That's the major
reason that we're releasing this version in advance on 2.0 later this summer.

All of the changes since 1.2.1 are listed in this document. If you get stuck,
give it a search to see if there might be a clue about something that has
changed. Or if you have problems, please file a bug.

For people who have been using OPENGL2 in the pre-releases, the library
has been removed from 1.5, and will return in future pre-releases before
eventually replacing the built-in OpenGL library for 2.0.

Meanwhile, here are the changes since revision 0195, the last pre-release:

[ pde ] 

+ A new version of the reference and examples have been posted online.

+ Upgraded to Quaqua 7.3.4 on OS 